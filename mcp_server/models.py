# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:54:18+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Amount(BaseModel):
    currency: Optional[str] = Field(
        None,
        description="The base currency applied to the value field to establish a monetary amount. The currency is represented as a 3-letter ISO4217 currency code. For example, the code for the Canadian Dollar is CAD. Default: The default currency of the eBay marketplace that hosts the listing. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/negotiation/types/bas:CurrencyCodeEnum'>eBay API documentation</a>",
    )
    value: Optional[str] = Field(
        None, description='The monetary amount in the specified currency.'
    )


class EligibleItem(BaseModel):
    listingId: Optional[str] = Field(
        None,
        description='The unique eBay-assigned ID for an eBay listing. A listingId is assigned by eBay when a seller creates a listing with the Trading API.',
    )


class ErrorParameter(BaseModel):
    name: Optional[str] = Field(None, description='The object of the error.')
    value: Optional[str] = Field(None, description='The value of the object.')


class OfferedItem(BaseModel):
    discountPercentage: Optional[str] = Field(
        None,
        description='This value denotes the percentage that the listing in the offer will be discounted from its original listed price. The seller can specify either the exact price of the discounted items with the price field or they can use this field to specify the percentage that the listing will be discounted, but not both. Minimum: 5 Required if you do not specify a price value.',
    )
    listingId: Optional[str] = Field(
        None,
        description='This value is a unique eBay-assigned ID that identifies the listing to which the offer pertains. A listingId value is generated by eBay when you list an item with the Trading API.',
    )
    price: Optional[Amount] = Field(
        None,
        description='This value denotes the final discounted price of the listing in the offer being made to the buyer. This value must be lower than the original price of the item as stated in the original listing. The seller can use either this field to specify the exact discounted price of the listing or they can use the discountPercentage field to specify the percentage that the listing will be discounted, but not both. Required if you do not specify a discountPercentage value.',
    )
    quantity: Optional[int] = Field(
        None,
        description='This integer value indicates the number of items in the eBay listing for which the offer is being made. The offer being made by the seller is an &quot;all or nothing&quot; offer, meaning the buyer must purchase the indicated quantity of items in order to receive the discount on the transaction. Default: 1',
    )


class PagedEligibleItemCollection(BaseModel):
    eligibleItems: Optional[List[EligibleItem]] = Field(
        None,
        description='A list of items that are eligible for a seller-initiated offer to a buyer. Each element in the list contains the listing ID of a listed item. These IDs represent the listings for which buyers have shown an interest.',
    )
    href: Optional[str] = Field(
        None, description='The URI of the current page of results from the result set.'
    )
    limit: Optional[int] = Field(
        None,
        description='The number of items returned on a single page from the result set. This value can be set in the request with the limit query parameter.',
    )
    next: Optional[str] = Field(
        None,
        description='The URI for the following page of results. This value is returned only if there is an additional page of results to display from the result set. Max length: 2048',
    )
    offset: Optional[int] = Field(
        None,
        description='The number of results skipped in the result set before listing the first returned result. This value can be set in the request with the offset query parameter. Note: The items in a paginated result set use a zero-based list where the first item in the list has an offset of 0.',
    )
    prev: Optional[str] = Field(
        None,
        description='The URI for the preceding page of results. This value is returned only if there is a previous page of results to display from the result set. Max length: 2048',
    )
    total: Optional[int] = Field(
        None,
        description='The total number of items retrieved in the result set. If no items match the search criteria, the server returns the HTTP status code 204 No Content.',
    )


class TimeDuration(BaseModel):
    unit: Optional[str] = Field(
        None,
        description="A time-measurement unit that specifies a singular period of time. A span of time is defined when you apply the value specified in the value field to the value specified for unit. Time-measurement units can be YEAR, MONTH, DAY, and so on. See TimeDurationUnitEnum for a complete list of possible time-measurement units. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/negotiation/types/bas:TimeDurationUnitEnum'>eBay API documentation</a>",
    )
    value: Optional[int] = Field(
        None,
        description='An integer that represents an amount of time, as measured by the time-measurement unit specified in the unit field.',
    )


class User(BaseModel):
    maskedUsername: Optional[str] = Field(
        None,
        description='The masked user name is a user name that has certain characters hidden for privacy of the user.',
    )


class CreateOffersRequest(BaseModel):
    allowCounterOffer: Optional[bool] = Field(
        None,
        description="If set to true, the buyer is allowed to make a counter-offer to the seller's offer. Note: Currently, you must set this field to false; counter-offers are not supported in this release. Default: false",
    )
    message: Optional[str] = Field(
        None,
        description='A seller-defined message related to the offer being made. This message is sent to the list of &quot;interested&quot; buyers. To increase the conversion rate of the offers a seller makes to buyers, eBay recommends you always add a customized message to your offers. Maximum length: 2,000 characters',
    )
    offerDuration: Optional[TimeDuration] = Field(
        None,
        description='The length of time the offer is valid from when it is created. The duration of the offer begins at the date and time denoted by creationDate. When the span of time specified by offerDuration passes beyond the creationDate, the offer expires. Note: offerDuration currently defaults to 2 days and you cannot set it to any other value (if specified, the unit and value fields in TimeDuration must be set to DAY and 2, respectively). Default: 2 Days',
    )
    offeredItems: Optional[List[OfferedItem]] = Field(
        None,
        description='An array of objects where each object contains the details of an offer and the ID of the listing on which the offer is being made. Note that the service does not currently support the creation of multiple offers with a single call to sendOfferToInterestedBuyer. With this, each request can target only one listing at a time and you must populate this array with a single element that contains the details of one offer.',
    )


class Error(BaseModel):
    category: Optional[str] = Field(None, description='Identifies the type of erro.')
    domain: Optional[str] = Field(
        None,
        description='Name for the primary system where the error occurred. This is relevant for application errors.',
    )
    errorId: Optional[int] = Field(
        None, description='A unique number to identify the error.'
    )
    inputRefIds: Optional[List[str]] = Field(
        None,
        description='An array of request elements most closely associated to the error.',
    )
    longMessage: Optional[str] = Field(
        None, description='A more detailed explanation of the error.'
    )
    message: Optional[str] = Field(
        None,
        description="Information on how to correct the problem, in the end user's terms and language where applicable.",
    )
    outputRefIds: Optional[List[str]] = Field(
        None,
        description='An array of request elements most closely associated to the error.',
    )
    parameters: Optional[List[ErrorParameter]] = Field(
        None,
        description='An array of name/value pairs that describe details the error condition. These are useful when multiple errors are returned.',
    )
    subdomain: Optional[str] = Field(
        None,
        description='Further helps indicate which subsystem the error is coming from. System subcategories include: Initialization, Serialization, Security, Monitoring, Rate Limiting, etc.',
    )


class Offer(BaseModel):
    allowCounterOffer: Optional[bool] = Field(
        None,
        description="If set to true, the buyer is allowed to make a counter-offer to the seller's offer.",
    )
    buyer: Optional[User] = Field(
        None, description='The buyer who has been sent the offer.'
    )
    creationDate: Optional[str] = Field(
        None,
        description="The date and time when the seller's offer was created. The returned timestamp is formatted as an ISO 8601 string, which is based on the 24-hour Coordinated Universal Time (UTC) clock. Format: [YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z Example: 2018-08-20T07:09:00.000Z",
    )
    initiatedBy: Optional[str] = Field(
        None,
        description='The eBay UserName of the user (seller) who initiated the offer.',
    )
    lastModifiedDate: Optional[str] = Field(
        None,
        description='The date and time when the offer was last modified. The returned timestamp is formatted as an ISO 8601 string.',
    )
    message: Optional[str] = Field(
        None,
        description='A seller-defined message related to the offer being made. This message is sent to the list of &quot;interested&quot; buyers along with the offer message from eBay.',
    )
    offerDuration: Optional[TimeDuration] = Field(
        None,
        description='The length of time that the offer is valid. The duration of the offer begins at the date and time denoted by creationDate. When the span of time specified by offerDuration passes beyond the creationDate, the offer expires.',
    )
    offerId: Optional[str] = Field(
        None, description='A unique eBay-assigned identifier for the offer.'
    )
    offerStatus: Optional[str] = Field(
        None,
        description="The current state, or status, of an offer. Status states include PENDING, COUNTERED, ACCEPTED, and DECLINED. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/negotiation/types/api:OfferStatusEnum'>eBay API documentation</a>",
    )
    offerType: Optional[str] = Field(
        None,
        description="The type of offer being made. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/negotiation/types/api:OfferTypeEnum'>eBay API documentation</a>",
    )
    offeredItems: Optional[List[OfferedItem]] = Field(
        None,
        description='The list of items associated with the offer. Currently, the offer list is restricted to a single offer.',
    )
    revision: Optional[str] = Field(
        None, description='A unique, eBay-assigned ID for the revision of the offer.'
    )


class SendOfferToInterestedBuyersCollectionResponse(BaseModel):
    offers: Optional[List[Offer]] = Field(
        None,
        description='The offers container returns a list of the offers sent to buyers who have shown an interest in listings included in the offer.',
    )
